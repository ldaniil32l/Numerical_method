import matplotlib.pyplot as plt

# n - порядок разделенной разности
n = 2 # На разностях выше 2 график ведет себя не адекватно для списка x2
# x1 и x2 списки значений на оси абсцисс
x1 = [-1, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, -0.05, -0.025]
x2 = [0, 0.025, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]
# ans - пустой список, в который будут заноситься значения функции
ans = []

for i in x1 + x2:
    ans.append(1 / (1 + (25 * i * i)))

# Во внешнем цикле получаем значения 
# интерполяционного полинома
# с k-ой разделенной разностью
# и заносим его значения в список a
for k in range (2, n + 1, 2):
    # Получаем разделенные разности для x1
    f = []
    for i in x1:
        f.append(1 / (1 + (25 * i * i)))
    for i in range(k):
        for j in range (len(x1) - 1, i, -1):
            f[j] = (f[j] - f[j - 1])/(x1[j] - x1[j - i - 1])
    # Получаем значения интерполяционного полинома для x1
    a = []
    for t in x1:
        p = f[len(x1) - 1]
        for i in range (len(x1) - 1, -1, -1):
            p = p * (t - x1[i]) + f[i]
        a.append(p)
    
    # Получаем разделенные разности для x2
    f = []
    for i in x2:
        f.append(1 / (1 + (25 * i * i)))
    for i in range(k):
        for j in range (len(x2) - 1, i, -1):
            f[j] = (f[j] - f[j - 1])/(x2[j] - x2[j - i - 1])
    # Получаем значения интерполяционного полинома для x2
    for t in x2:
        p = f[len(x2) - 1]
        for i in range (len(x2) - 1, -1, -1):
            p = p * (t - x2[i]) + f[i]
        a.append(p)
    # Строим график k-ой разности
    plt.plot(x1 + x2, a)

# Выводим графики
plt.plot(x1 + x2, ans)
plt.grid()
plt.xlabel('x')
plt.ylabel('y')
plt.show()